-- The C compiler identification is GNU 9.4.0
-- The CXX compiler identification is GNU 9.4.0
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Found ament_cmake: 0.9.11 (/opt/ros/foxy/share/ament_cmake/cmake)
-- Found PythonInterp: /usr/bin/python3 (found suitable version "3.8.10", minimum required is "3") 
-- Using PYTHON_EXECUTABLE: /usr/bin/python3
-- Found rclcpp: 2.4.2 (/opt/ros/foxy/share/rclcpp/cmake)
-- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c
-- Found rosidl_adapter: 1.3.0 (/opt/ros/foxy/share/rosidl_adapter/cmake)
-- Found OpenSSL: /usr/lib/x86_64-linux-gnu/libcrypto.so (found version "1.1.1f")  
-- Found FastRTPS: /opt/ros/foxy/include  
-- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp
-- Found rmw_implementation_cmake: 1.0.3 (/opt/ros/foxy/share/rmw_implementation_cmake/cmake)
-- Using RMW implementation 'rmw_fastrtps_cpp' as default
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Looking for pthread_create in pthreads
-- Looking for pthread_create in pthreads - not found
-- Looking for pthread_create in pthread
-- Looking for pthread_create in pthread - found
-- Found Threads: TRUE  
-- Found geometry_msgs: 2.0.5 (/opt/ros/foxy/share/geometry_msgs/cmake)
-- Found turtlesim: 1.2.6 (/opt/ros/foxy/share/turtlesim/cmake)
-- Found ament_lint_auto: 0.9.7 (/opt/ros/foxy/share/ament_lint_auto/cmake)
-- Added test 'copyright' to check source files copyright and LICENSE
-- Added test 'cppcheck' to perform static code analysis on C / C++ code
-- Configured cppcheck include dirs: $<BUILD_INTERFACE:/home/toffanetto/ecai21/src/two_turtle_control/include>
-- Configured cppcheck exclude dirs and/or files: 
-- Added test 'cpplint' to check C / C++ code against the Google style
-- Configured cpplint exclude dirs and/or files: 
-- Added test 'lint_cmake' to check CMake code style
-- Added test 'uncrustify' to check C / C++ code style
-- Configured uncrustify additional arguments: 
-- Added test 'xmllint' to check XML markup files
-- Configuring done
-- Generating done
-- Build files have been written to: /home/toffanetto/ecai21/src/build/two_turtle_control
[35m[1mScanning dependencies of target two_turtle[0m
[ 50%] [32mBuilding CXX object CMakeFiles/two_turtle.dir/src/two_turtle.cpp.o[0m
In file included from [01m[K/opt/ros/foxy/include/rclcpp/context.hpp:19[m[K,
                 from [01m[K/opt/ros/foxy/include/rclcpp/contexts/default_context.hpp:18[m[K,
                 from [01m[K/opt/ros/foxy/include/rclcpp/executor.hpp:32[m[K,
                 from [01m[K/opt/ros/foxy/include/rclcpp/executors/multi_threaded_executor.hpp:26[m[K,
                 from [01m[K/opt/ros/foxy/include/rclcpp/executors.hpp:21[m[K,
                 from [01m[K/opt/ros/foxy/include/rclcpp/rclcpp.hpp:146[m[K,
                 from [01m[K/home/toffanetto/ecai21/src/two_turtle_control/src/two_turtle.cpp:6[m[K:
/usr/include/c++/9/functional: In instantiation of â€˜[01m[Kstruct std::_Bind_check_arity<void (TwoTurtle::*)(), TwoTurtle*, const std::_Placeholder<1>&>[m[Kâ€™:
[01m[K/usr/include/c++/9/functional:787:12:[m[K   required from â€˜[01m[Kstruct std::_Bind_helper<false, void (TwoTurtle::*)(), TwoTurtle*, const std::_Placeholder<1>&>[m[Kâ€™
[01m[K/usr/include/c++/9/functional:808:5:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Func, class ... _BoundArgs> typename std::_Bind_helper<std::__is_socketlike<_Func>::value, _Func, _BoundArgs ...>::type std::bind(_Func&&, _BoundArgs&& ...) [with _Func = void (TwoTurtle::*)(); _BoundArgs = {TwoTurtle*, const std::_Placeholder<1>&}][m[Kâ€™
[01m[K/home/toffanetto/ecai21/src/two_turtle_control/src/two_turtle.cpp:32:97:[m[K   required from here
[01m[K/usr/include/c++/9/functional:775:7:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: Wrong number of arguments for pointer-to-member
  774 |       static_assert(_Varargs::[01;31m[Kvalue[m[K
      |                               [01;31m[K~~~~~[m[K
  775 | [01;31m[K      ? sizeof...(_BoundArgs) >= _Arity::value + 1[m[K
      |       [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
  776 | [01;31m[K      : sizeof...(_BoundArgs) == _Arity::value + 1[m[K,
      |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/c++/9/bits/unique_ptr.h:37[m[K,
                 from [01m[K/usr/include/c++/9/memory:80[m[K,
                 from [01m[K/home/toffanetto/ecai21/src/two_turtle_control/src/two_turtle.cpp:2[m[K:
/usr/include/c++/9/tuple: In instantiation of â€˜[01m[Kstruct std::tuple_element<0, std::tuple<> >[m[Kâ€™:
[01m[K/opt/ros/foxy/include/rclcpp/function_traits.hpp:71:9:[m[K   required by substitution of â€˜[01m[Ktemplate<class ReturnTypeT, class ... Args> template<long unsigned int N> using argument_type = typename std::tuple_element<N, std::tuple<_Elements ...> >::type [with long unsigned int N = 0; ReturnTypeT = void; Args = {}][m[Kâ€™
[01m[K/opt/ros/foxy/include/rclcpp/subscription_traits.hpp:97:8:[m[K   required from â€˜[01m[Kstruct rclcpp::subscription_traits::has_message_type<std::_Bind<void (TwoTurtle::*(TwoTurtle*, std::_Placeholder<1>))()>, std::allocator<void>, void, void, void, void>[m[Kâ€™
[01m[K/opt/ros/foxy/include/rclcpp/node.hpp:204:5:[m[K   required by substitution of â€˜[01m[Ktemplate<class MessageT, class CallbackT, class AllocatorT, class CallbackMessageT, class SubscriptionT, class MessageMemoryStrategyT> std::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = turtlesim::msg::Pose_<std::allocator<void> >; CallbackT = std::_Bind<void (TwoTurtle::*(TwoTurtle*, std::_Placeholder<1>))()>; AllocatorT = std::allocator<void>; CallbackMessageT = <missing>; SubscriptionT = <missing>; MessageMemoryStrategyT = <missing>][m[Kâ€™
[01m[K/home/toffanetto/ecai21/src/two_turtle_control/src/two_turtle.cpp:32:98:[m[K   required from here
[01m[K/usr/include/c++/9/tuple:1303:25:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: tuple index is in range
 1303 |       static_assert([01;31m[K__i < tuple_size<tuple<>>::value[m[K,
      |                     [01;31m[K~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/opt/ros/foxy/include/rclcpp/client.hpp:32[m[K,
                 from [01m[K/opt/ros/foxy/include/rclcpp/callback_group.hpp:23[m[K,
                 from [01m[K/opt/ros/foxy/include/rclcpp/any_executable.hpp:20[m[K,
                 from [01m[K/opt/ros/foxy/include/rclcpp/memory_strategy.hpp:24[m[K,
                 from [01m[K/opt/ros/foxy/include/rclcpp/memory_strategies.hpp:18[m[K,
                 from [01m[K/opt/ros/foxy/include/rclcpp/executor_options.hpp:20[m[K,
                 from [01m[K/opt/ros/foxy/include/rclcpp/executor.hpp:33[m[K,
                 from [01m[K/opt/ros/foxy/include/rclcpp/executors/multi_threaded_executor.hpp:26[m[K,
                 from [01m[K/opt/ros/foxy/include/rclcpp/executors.hpp:21[m[K,
                 from [01m[K/opt/ros/foxy/include/rclcpp/rclcpp.hpp:146[m[K,
                 from [01m[K/home/toffanetto/ecai21/src/two_turtle_control/src/two_turtle.cpp:6[m[K:
/opt/ros/foxy/include/rclcpp/function_traits.hpp: In substitution of â€˜[01m[Ktemplate<class ReturnTypeT, class ... Args> template<long unsigned int N> using argument_type = typename std::tuple_element<N, std::tuple<_Elements ...> >::type [with long unsigned int N = 0; ReturnTypeT = void; Args = {}][m[Kâ€™:
[01m[K/opt/ros/foxy/include/rclcpp/subscription_traits.hpp:97:8:[m[K   required from â€˜[01m[Kstruct rclcpp::subscription_traits::has_message_type<std::_Bind<void (TwoTurtle::*(TwoTurtle*, std::_Placeholder<1>))()>, std::allocator<void>, void, void, void, void>[m[Kâ€™
[01m[K/opt/ros/foxy/include/rclcpp/node.hpp:204:5:[m[K   required by substitution of â€˜[01m[Ktemplate<class MessageT, class CallbackT, class AllocatorT, class CallbackMessageT, class SubscriptionT, class MessageMemoryStrategyT> std::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = turtlesim::msg::Pose_<std::allocator<void> >; CallbackT = std::_Bind<void (TwoTurtle::*(TwoTurtle*, std::_Placeholder<1>))()>; AllocatorT = std::allocator<void>; CallbackMessageT = <missing>; SubscriptionT = <missing>; MessageMemoryStrategyT = <missing>][m[Kâ€™
[01m[K/home/toffanetto/ecai21/src/two_turtle_control/src/two_turtle.cpp:32:98:[m[K   required from here
[01m[K/opt/ros/foxy/include/rclcpp/function_traits.hpp:71:9:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::tuple_element<0, std::tuple<> >[m[Kâ€™
   71 |   using [01;31m[Kargument_type[m[K = typename std::tuple_element<N, arguments>::type;
      |         [01;31m[K^~~~~~~~~~~~~[m[K
[01m[K/home/toffanetto/ecai21/src/two_turtle_control/src/two_turtle.cpp:[m[K In constructor â€˜[01m[KTwoTurtle::TwoTurtle()[m[Kâ€™:
[01m[K/home/toffanetto/ecai21/src/two_turtle_control/src/two_turtle.cpp:32:98:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KTwoTurtle::create_subscription<turtlesim::msg::Pose>(const char [14], rclcpp::QoS&, std::_Bind_helper<false, void (TwoTurtle::*)(), TwoTurtle*, const std::_Placeholder<1>&>::type)[m[Kâ€™
   32 |                 std::bind(&TwoTurtle::pose_callback, this, std::placeholders::_1)[01;31m[K)[m[K;
      |                                                                                  [01;31m[K^[m[K

In file included from [01m[K/opt/ros/foxy/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/foxy/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/foxy/include/rclcpp/rclcpp.hpp:146[m[K,
                 from [01m[K/home/toffanetto/ecai21/src/two_turtle_control/src/two_turtle.cpp:6[m[K:
[01m[K/opt/ros/foxy/include/rclcpp/node.hpp:213:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class MessageT, class CallbackT, class AllocatorT, class CallbackMessageT, class SubscriptionT, class MessageMemoryStrategyT> std::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr)[m[Kâ€™
  213 |   [01;36m[Kcreate_subscription[m[K(
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/opt/ros/foxy/include/rclcpp/node.hpp:213:3:[m[K [01;36m[Knote: [m[K  substitution of deduced template arguments resulted in errors seen above
make[2]: *** [CMakeFiles/two_turtle.dir/build.make:63: CMakeFiles/two_turtle.dir/src/two_turtle.cpp.o] Error 1
make[1]: *** [CMakeFiles/Makefile2:78: CMakeFiles/two_turtle.dir/all] Error 2
make: *** [Makefile:141: all] Error 2
